---
- name: Deploy Rocket.chat
  docker_container:
    # Image tag (replace with yours)
    image: rocket.chat:"{{ rocket.chat_version }}"
    volumes:
      - rocketchat-uploads:/app/uploads
    environment:
      PORT: 3000
      # Rocket.Chat URL (replace with yours)
      ROOT_URL: "{{ rocket_chat_url }}"
      MONGO_URL: mongodb://mongodb:27017/rocketchat?replicaSet=rs0
      MONGO_OPLOG_URL: mongodb://mongodb:27017/local?replicaSet=rs0
      DEPLOY_METHOD: docker
      Accounts_UseDNSDomainCheck: 'false'
    healthcheck:
      test: >
         /usr/local/bin/node -e '
         const http = require("http");
         const options = {
           host: "localhost",
           port: 3000,
           path: "/api/info",
           timeout: 2000
         };
         const healthCheck = http.request(options, (res) => {
           console.log(`HEALTHCHECK STATUS: $${res.statusCode}`);
           if (res.statusCode == 200) {
             process.exit(0);
           } else {
             process.exit(1);
           }
         });
         healthCheck.on("error", function (err) {
           console.error("ERROR");
           process.exit(1);
         });
         healthCheck.end();'
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    labels:
      - "traefik.enable=true"
      # Rocket.Chat URL (replace with yours)
      - "traefik.http.routers.rocketchat.rule=Host(`{{  rocket_chat_url  }}`)"
      - "traefik.http.routers.rocketchat.service=rocketchat"
      - "traefik.http.routers.rocketchat.entrypoints=websecure"
      - "traefik.http.services.rocketchat.loadbalancer.server.port=3000"
      - "traefik.http.routers.rocketchat.tls=true"
      - "traefik.http.routers.rocketchat.tls.certresolver=letsencrypt"
      - "traefik.http.services.rocketchat.loadbalancer.passhostheader=true"
      - "traefik.http.routers.rocketchat.middlewares=compresstraefik"
      - "traefik.http.middlewares.compresstraefik.compress=true"
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
      traefik:
        condition: service_healthy